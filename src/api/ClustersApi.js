/**
 * The Giant Swarm API
 * This is the documentation for the Giant Swarm API.  For an introduction to Giant Swarm, refer to the [documentation site](https://docs.giantswarm.io/).  The Giant Swarm API attempts to behave in a __restful__ way. As a developer, you access resources using the `GET` method and, for example, delete them using the same path and the `DELETE` method.  Accessing resources via GET usually returns all information available about a resource, while collections, like for example the list of all clusters you have access to, only contain a selected few attributes of each member item.  Some requests, like for example the request to create a new cluster, don't return the resource itself. Instead, the response delivers a standard message body, showing a `code` and a `message` part. The `message` contains information for you or a client's end user. The `code` attribute contains some string (example: `RESOURCE_CREATED`) that is supposed to give you details on the state of the operation, in addition to standard HTTP status codes. This message format is also used in the case of errors. We provide a [list of all response codes](https://github.com/giantswarm/api-spec/blob/master/details/RESPONSE_CODES.md) outside this documentation.  Feedback on the API as well as this documentation is welcome via `support@giantswarm.io` or on IRC channel [#giantswarm](irc://irc.freenode.org:6667/#giantswarm) on freenode.  ## Source  The source of this documentation is available on [GitHub](https://github.com/giantswarm/api-spec). 
 *
 * OpenAPI spec version: 5.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V4AddClusterRequest', 'model/V4ClusterDetailsResponse', 'model/V4ClusterListItem', 'model/V4GenericResponse', 'model/V4GetClusterStatusResponse', 'model/V4ModifyClusterRequest', 'model/V5AddClusterRequest', 'model/V5ClusterDetailsResponse', 'model/V5ModifyClusterRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/V4AddClusterRequest'), require('../model/V4ClusterDetailsResponse'), require('../model/V4ClusterListItem'), require('../model/V4GenericResponse'), require('../model/V4GetClusterStatusResponse'), require('../model/V4ModifyClusterRequest'), require('../model/V5AddClusterRequest'), require('../model/V5ClusterDetailsResponse'), require('../model/V5ModifyClusterRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.GiantSwarm) {
      root.GiantSwarm = {};
    }
    root.GiantSwarm.ClustersApi = factory(root.GiantSwarm.ApiClient, root.GiantSwarm.V4AddClusterRequest, root.GiantSwarm.V4ClusterDetailsResponse, root.GiantSwarm.V4ClusterListItem, root.GiantSwarm.V4GenericResponse, root.GiantSwarm.V4GetClusterStatusResponse, root.GiantSwarm.V4ModifyClusterRequest, root.GiantSwarm.V5AddClusterRequest, root.GiantSwarm.V5ClusterDetailsResponse, root.GiantSwarm.V5ModifyClusterRequest);
  }
}(this, function(ApiClient, V4AddClusterRequest, V4ClusterDetailsResponse, V4ClusterListItem, V4GenericResponse, V4GetClusterStatusResponse, V4ModifyClusterRequest, V5AddClusterRequest, V5ClusterDetailsResponse, V5ModifyClusterRequest) {
  'use strict';

  /**
   * Clusters service.
   * @module api/ClustersApi
   * @version 4.0.0
   */

  /**
   * Constructs a new ClustersApi. 
   * @alias module:api/ClustersApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Create cluster (v4)
     * This operation is used to create a new Kubernetes cluster or \&quot;tenant cluster\&quot;.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; AWS support ends with release version &#x60;TODO&#x60;. For AWS clusters using release &#x60;TODO&#x60; and higher, please refer to the [v5 equivalent](#operation/addClusterV5).  ### Cluster definition  The cluster definition format allows to set a number of optional configuration details, like worker node configuration, with node specification depending on the provider (e. g. on &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; the VM size, or on &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; the memory size and number of CPU cores).  One attribute is __mandatory__ upon creation: The &#x60;owner&#x60; attribute must carry the name of the organization the cluster will belong to. Note that the acting user must be a member of that organization in order to create a cluster.  For all other attributes, defaults will be applied if the attribute is not set. Check out the [getInfo](#operation/getInfo) operation for more info about defaults. If no &#x60;release_version&#x60; is set, the latest release version available for the provider will be used. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {module:model/V4AddClusterRequest} body New cluster definition
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/V4GenericResponse} and HTTP response
     */
    this.addClusterWithHttpInfo = function(authorization, body, opts) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling addCluster");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addCluster");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V4GenericResponse;

      return this.apiClient.callApi(
        '/v4/clusters/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Create cluster (v4)
     * This operation is used to create a new Kubernetes cluster or \&quot;tenant cluster\&quot;.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; AWS support ends with release version &#x60;TODO&#x60;. For AWS clusters using release &#x60;TODO&#x60; and higher, please refer to the [v5 equivalent](#operation/addClusterV5).  ### Cluster definition  The cluster definition format allows to set a number of optional configuration details, like worker node configuration, with node specification depending on the provider (e. g. on &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; the VM size, or on &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; the memory size and number of CPU cores).  One attribute is __mandatory__ upon creation: The &#x60;owner&#x60; attribute must carry the name of the organization the cluster will belong to. Note that the acting user must be a member of that organization in order to create a cluster.  For all other attributes, defaults will be applied if the attribute is not set. Check out the [getInfo](#operation/getInfo) operation for more info about defaults. If no &#x60;release_version&#x60; is set, the latest release version available for the provider will be used. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {module:model/V4AddClusterRequest} body New cluster definition
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/V4GenericResponse}
     */
    this.addCluster = function(authorization, body, opts) {
      return this.addClusterWithHttpInfo(authorization, body, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Create cluster (v5)
     * Allows to create most recent clusters on AWS installations.  __Providers__: &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; Only supports release &#x60;TODO&#x60; and higher on AWS. For other providers, please refer to the [v4 equivalent](#operation/addCluster).  ### Node pools  In the Giant Swarm API v5, worker nodes are grouped into pools of worker nodes where all nodes share the same configuration.  When creating a cluster without submitting the &#x60;nodepools&#x60; attribute, or with its value being an empty array, one node pool with default configuration will be created.  Node pools can be created, deleted and modified during the entire lifetime of a cluster.  See [node pools](#tag/nodepools) and [Create node pool](#operation/addNodePool) for details. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {module:model/V5AddClusterRequest} body New cluster definition
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/V5ClusterDetailsResponse} and HTTP response
     */
    this.addClusterV5WithHttpInfo = function(authorization, body, opts) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling addClusterV5");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addClusterV5");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V5ClusterDetailsResponse;

      return this.apiClient.callApi(
        '/v5/clusters/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Create cluster (v5)
     * Allows to create most recent clusters on AWS installations.  __Providers__: &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; Only supports release &#x60;TODO&#x60; and higher on AWS. For other providers, please refer to the [v4 equivalent](#operation/addCluster).  ### Node pools  In the Giant Swarm API v5, worker nodes are grouped into pools of worker nodes where all nodes share the same configuration.  When creating a cluster without submitting the &#x60;nodepools&#x60; attribute, or with its value being an empty array, one node pool with default configuration will be created.  Node pools can be created, deleted and modified during the entire lifetime of a cluster.  See [node pools](#tag/nodepools) and [Create node pool](#operation/addNodePool) for details. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {module:model/V5AddClusterRequest} body New cluster definition
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/V5ClusterDetailsResponse}
     */
    this.addClusterV5 = function(authorization, body, opts) {
      return this.addClusterV5WithHttpInfo(authorization, body, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Delete cluster
     * This operation triggers deleting a cluster with all resources attached to it.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS&lt;/span&gt; &amp;ndash; All providers supported.  Deleting a cluster causes the termination of all workloads running on the cluster. Data stored on the worker nodes will be lost. On AWS, node pools belonging to the cluster are deleted, too. There is no way to undo this operation.  The response is sent as soon as the request is validated. At that point, workloads might still be running on the cluster and may be accessible for a little wile, until the cluster is actually deleted. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/V4GenericResponse} and HTTP response
     */
    this.deleteClusterWithHttpInfo = function(authorization, clusterId, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling deleteCluster");
      }

      // verify the required parameter 'clusterId' is set
      if (clusterId === undefined || clusterId === null) {
        throw new Error("Missing the required parameter 'clusterId' when calling deleteCluster");
      }


      var pathParams = {
        'cluster_id': clusterId
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V4GenericResponse;

      return this.apiClient.callApi(
        '/v4/clusters/{cluster_id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Delete cluster
     * This operation triggers deleting a cluster with all resources attached to it.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS&lt;/span&gt; &amp;ndash; All providers supported.  Deleting a cluster causes the termination of all workloads running on the cluster. Data stored on the worker nodes will be lost. On AWS, node pools belonging to the cluster are deleted, too. There is no way to undo this operation.  The response is sent as soon as the request is validated. At that point, workloads might still be running on the cluster and may be accessible for a little wile, until the cluster is actually deleted. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/V4GenericResponse}
     */
    this.deleteCluster = function(authorization, clusterId, opts) {
      return this.deleteClusterWithHttpInfo(authorization, clusterId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get cluster details (v4)
     * This operation allows to obtain basic details on a particular cluster.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; AWS support ends with release version &#x60;TODO&#x60;. For AWS clusters using release &#x60;TODO&#x60; and higher, please refer to the [v5 equivalent](#operation/getClusterV5). 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/V4ClusterDetailsResponse} and HTTP response
     */
    this.getClusterWithHttpInfo = function(authorization, clusterId, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getCluster");
      }

      // verify the required parameter 'clusterId' is set
      if (clusterId === undefined || clusterId === null) {
        throw new Error("Missing the required parameter 'clusterId' when calling getCluster");
      }


      var pathParams = {
        'cluster_id': clusterId
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V4ClusterDetailsResponse;

      return this.apiClient.callApi(
        '/v4/clusters/{cluster_id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get cluster details (v4)
     * This operation allows to obtain basic details on a particular cluster.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; AWS support ends with release version &#x60;TODO&#x60;. For AWS clusters using release &#x60;TODO&#x60; and higher, please refer to the [v5 equivalent](#operation/getClusterV5). 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/V4ClusterDetailsResponse}
     */
    this.getCluster = function(authorization, clusterId, opts) {
      return this.getClusterWithHttpInfo(authorization, clusterId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get cluster status
     * Returns an object about a cluster&#39;s current state and past status transitions.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS&lt;/span&gt; &amp;ndash; All providers supported.  This endpoint exposes the status content of the Kubernetes resources representing a cluster in the corresponding custom resource. That is, depending on the provider:  - [&#x60;awsconfig.provider.giantswarm.io&#x60;](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#AWSConfig) - [&#x60;azureconfig.provider.giantswarm.io&#x60;](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#AzureConfig) - [&#x60;kvmconfig.provider.giantswarm.io&#x60;](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#KVMConfig)  Note that structure and style differ from the rest of the v4 API. Also note that the structure depends on the release version and changes can be expected frequently. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/V4GetClusterStatusResponse} and HTTP response
     */
    this.getClusterStatusWithHttpInfo = function(authorization, clusterId, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getClusterStatus");
      }

      // verify the required parameter 'clusterId' is set
      if (clusterId === undefined || clusterId === null) {
        throw new Error("Missing the required parameter 'clusterId' when calling getClusterStatus");
      }


      var pathParams = {
        'cluster_id': clusterId
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V4GetClusterStatusResponse;

      return this.apiClient.callApi(
        '/v4/clusters/{cluster_id}/status/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get cluster status
     * Returns an object about a cluster&#39;s current state and past status transitions.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS&lt;/span&gt; &amp;ndash; All providers supported.  This endpoint exposes the status content of the Kubernetes resources representing a cluster in the corresponding custom resource. That is, depending on the provider:  - [&#x60;awsconfig.provider.giantswarm.io&#x60;](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#AWSConfig) - [&#x60;azureconfig.provider.giantswarm.io&#x60;](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#AzureConfig) - [&#x60;kvmconfig.provider.giantswarm.io&#x60;](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#KVMConfig)  Note that structure and style differ from the rest of the v4 API. Also note that the structure depends on the release version and changes can be expected frequently. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/V4GetClusterStatusResponse}
     */
    this.getClusterStatus = function(authorization, clusterId, opts) {
      return this.getClusterStatusWithHttpInfo(authorization, clusterId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get cluster details (v5)
     * Allows to retrieve cluster details on AWS installations.  __Providers__: &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; Only supports release &#x60;TODO&#x60; and higher on AWS. For other providers, please refer to the [v4 equivalent](#operation/getCluster). 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/V5ClusterDetailsResponse} and HTTP response
     */
    this.getClusterV5WithHttpInfo = function(authorization, clusterId, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getClusterV5");
      }

      // verify the required parameter 'clusterId' is set
      if (clusterId === undefined || clusterId === null) {
        throw new Error("Missing the required parameter 'clusterId' when calling getClusterV5");
      }


      var pathParams = {
        'cluster_id': clusterId
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V5ClusterDetailsResponse;

      return this.apiClient.callApi(
        '/v5/clusters/{cluster_id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get cluster details (v5)
     * Allows to retrieve cluster details on AWS installations.  __Providers__: &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; Only supports release &#x60;TODO&#x60; and higher on AWS. For other providers, please refer to the [v4 equivalent](#operation/getCluster). 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/V5ClusterDetailsResponse}
     */
    this.getClusterV5 = function(authorization, clusterId, opts) {
      return this.getClusterV5WithHttpInfo(authorization, clusterId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get clusters
     * This operation fetches a list of clusters.  __Providers__: &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS&lt;/span&gt; &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &amp;ndash; All providers supported  The result depends on the permissions of the user. A normal user will get all the clusters the user has access to, via organization membership. A user with admin permission will receive a list of all existing clusters.  The result array items are sparse representations of the cluster objects. To fetch more details on a cluster, use the following operations:  - [getCluster](#operation/getCluster) or [getClusterV5](#operation/getClusterV5) for cluster details - [getNodePools](#operation/getNodePools) for node pool details - [getClusterStatus](#operation/getClusterStatus) operations. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/V4ClusterListItem>} and HTTP response
     */
    this.getClustersWithHttpInfo = function(authorization, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getClusters");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [V4ClusterListItem];

      return this.apiClient.callApi(
        '/v4/clusters/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get clusters
     * This operation fetches a list of clusters.  __Providers__: &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS&lt;/span&gt; &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &amp;ndash; All providers supported  The result depends on the permissions of the user. A normal user will get all the clusters the user has access to, via organization membership. A user with admin permission will receive a list of all existing clusters.  The result array items are sparse representations of the cluster objects. To fetch more details on a cluster, use the following operations:  - [getCluster](#operation/getCluster) or [getClusterV5](#operation/getClusterV5) for cluster details - [getNodePools](#operation/getNodePools) for node pool details - [getClusterStatus](#operation/getClusterStatus) operations. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/V4ClusterListItem>}
     */
    this.getClusters = function(authorization, opts) {
      return this.getClustersWithHttpInfo(authorization, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Modify cluster (v4)
     * This operation allows to modify an existing cluster.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; AWS support ends with release version &#x60;TODO&#x60;. For AWS clusters using release &#x60;TODO&#x60; and higher, please refer to the [v5 equivalent](#operation/modifyClusterV5).  A cluster modification is performed by submitting a &#x60;PATCH&#x60; request to the cluster resource (as described in the [addCluster](#operation/addCluster) and [getCluster](#operation/getCluster)) in form of a [JSON Patch Merge (RFC 7386)](https://tools.ietf.org/html/rfc7386). This means, only the attributes to be modified have to be contained in the request body.  The following attributes can be modified:  - &#x60;name&#x60;: Rename the cluster to something more fitting.  - &#x60;owner&#x60;: Changing the owner organization name means to change cluster ownership from one organization to another. The user performing the request has to be a member of both organizations.  - &#x60;release_version&#x60;: By changing this attribute you can upgrade a cluster to a newer [release](https://docs.giantswarm.io/api/#tag/releases).  - &#x60;scaling&#x60;: Adjust the cluster node limits to make use of auto scaling or to have full control over the node count. The latter can be achieved by setting &#x60;min&#x60; and &#x60;max&#x60; to the same values. Note that setting &#x60;min&#x60; and &#x60;max&#x60; to different values (effectively enabling autoscaling) is only available on AWS with releases from 6.2.0.   - &#x60;workers&#x60; (deprecated): For backward compatibility reasons, it is possible to provide this attribute as an array, where the number of items contained in the array determines the intended number of worker nodes in the cluster. The item count will be applied as both &#x60;min&#x60; and &#x60;max&#x60; value of the scaling limits, effectively disabling autoscaling. This requires the &#x60;scaling&#x60; attribute must not be present in the same request.  ### Limitations  - As of now, existing worker nodes cannot be modified. - The number of availability zones cannot be modified. - When removing nodes (scaling down), it is not possible to determine which nodes will be removed. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {module:model/V4ModifyClusterRequest} body Merge-patch body
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/V4ClusterDetailsResponse} and HTTP response
     */
    this.modifyClusterWithHttpInfo = function(authorization, clusterId, body, opts) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling modifyCluster");
      }

      // verify the required parameter 'clusterId' is set
      if (clusterId === undefined || clusterId === null) {
        throw new Error("Missing the required parameter 'clusterId' when calling modifyCluster");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling modifyCluster");
      }


      var pathParams = {
        'cluster_id': clusterId
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V4ClusterDetailsResponse;

      return this.apiClient.callApi(
        '/v4/clusters/{cluster_id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Modify cluster (v4)
     * This operation allows to modify an existing cluster.  __Providers__: &lt;span class&#x3D;\&quot;badge azure\&quot;&gt;Azure&lt;/span&gt; &lt;span class&#x3D;\&quot;badge kvm\&quot;&gt;KVM&lt;/span&gt; &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; AWS support ends with release version &#x60;TODO&#x60;. For AWS clusters using release &#x60;TODO&#x60; and higher, please refer to the [v5 equivalent](#operation/modifyClusterV5).  A cluster modification is performed by submitting a &#x60;PATCH&#x60; request to the cluster resource (as described in the [addCluster](#operation/addCluster) and [getCluster](#operation/getCluster)) in form of a [JSON Patch Merge (RFC 7386)](https://tools.ietf.org/html/rfc7386). This means, only the attributes to be modified have to be contained in the request body.  The following attributes can be modified:  - &#x60;name&#x60;: Rename the cluster to something more fitting.  - &#x60;owner&#x60;: Changing the owner organization name means to change cluster ownership from one organization to another. The user performing the request has to be a member of both organizations.  - &#x60;release_version&#x60;: By changing this attribute you can upgrade a cluster to a newer [release](https://docs.giantswarm.io/api/#tag/releases).  - &#x60;scaling&#x60;: Adjust the cluster node limits to make use of auto scaling or to have full control over the node count. The latter can be achieved by setting &#x60;min&#x60; and &#x60;max&#x60; to the same values. Note that setting &#x60;min&#x60; and &#x60;max&#x60; to different values (effectively enabling autoscaling) is only available on AWS with releases from 6.2.0.   - &#x60;workers&#x60; (deprecated): For backward compatibility reasons, it is possible to provide this attribute as an array, where the number of items contained in the array determines the intended number of worker nodes in the cluster. The item count will be applied as both &#x60;min&#x60; and &#x60;max&#x60; value of the scaling limits, effectively disabling autoscaling. This requires the &#x60;scaling&#x60; attribute must not be present in the same request.  ### Limitations  - As of now, existing worker nodes cannot be modified. - The number of availability zones cannot be modified. - When removing nodes (scaling down), it is not possible to determine which nodes will be removed. 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {module:model/V4ModifyClusterRequest} body Merge-patch body
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/V4ClusterDetailsResponse}
     */
    this.modifyCluster = function(authorization, clusterId, body, opts) {
      return this.modifyClusterWithHttpInfo(authorization, clusterId, body, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Modify cluster (v5)
     * Allows to change cluster properties on AWS installations.  __Providers__: &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; Only supports release &#x60;TODO&#x60; and higher on AWS. For other providers, please refer to the [v4 equivalent](#operation/modifyCluster). 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {module:model/V5ModifyClusterRequest} body Merge-patch body
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/V5ClusterDetailsResponse} and HTTP response
     */
    this.modifyClusterV5WithHttpInfo = function(authorization, clusterId, body, opts) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling modifyClusterV5");
      }

      // verify the required parameter 'clusterId' is set
      if (clusterId === undefined || clusterId === null) {
        throw new Error("Missing the required parameter 'clusterId' when calling modifyClusterV5");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling modifyClusterV5");
      }


      var pathParams = {
        'cluster_id': clusterId
      };
      var queryParams = {
      };
      var headerParams = {
        'Authorization': authorization,
        'X-Request-ID': opts['xRequestID'],
        'X-Giant-Swarm-Activity': opts['xGiantSwarmActivity'],
        'X-Giant-Swarm-CmdLine': opts['xGiantSwarmCmdLine']
      };
      var formParams = {
      };

      var authNames = ['AuthorizationHeaderToken'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V5ClusterDetailsResponse;

      return this.apiClient.callApi(
        '/v5/clusters/{cluster_id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Modify cluster (v5)
     * Allows to change cluster properties on AWS installations.  __Providers__: &lt;span class&#x3D;\&quot;badge aws\&quot;&gt;AWS*&lt;/span&gt; &amp;ndash; Only supports release &#x60;TODO&#x60; and higher on AWS. For other providers, please refer to the [v4 equivalent](#operation/modifyCluster). 
     * @param {String} authorization As described in the [authentication](#section/Authentication) section 
     * @param {String} clusterId Cluster ID
     * @param {module:model/V5ModifyClusterRequest} body Merge-patch body
     * @param {Object} opts Optional parameters
     * @param {String} opts.xRequestID A randomly generated key that can be used to track a request throughout services of Giant Swarm. 
     * @param {String} opts.xGiantSwarmActivity Name of an activity to track, like \&quot;list-clusters\&quot;. This allows to analyze several API requests sent in context and gives an idea on the purpose. 
     * @param {String} opts.xGiantSwarmCmdLine If activity has been issued by a CLI, this header can contain the command line 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/V5ClusterDetailsResponse}
     */
    this.modifyClusterV5 = function(authorization, clusterId, body, opts) {
      return this.modifyClusterV5WithHttpInfo(authorization, clusterId, body, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
