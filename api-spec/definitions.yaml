definitions:

  # Generic response model
  V4GenericResponse:
    type: object
    properties:
      message:
        type: string
        description: A human readable message
      code:
        type: string
        description: |
          A machine readable [response code](https://github.com/giantswarm/api-spec/blob/master/details/RESPONSE_CODES.md) like e. g. `INVALID_CREDENTIALS`

  # App Catalogs Response
  V4AppCatalogsResponse:
    type: array
    items:
      type: object
      properties:
        metadata:
          type: object
          properties:
            name:
              description: A URL friendly identifier for the catalog.
              type: string
            labels:
              description: The labels that are set on this app catalog
              type: object
              properties:
                "application.giantswarm.io/catalog-type":
                  type: string
                "app-operator.giantswarm.io/version":
                  type: string
        spec:
          type: object
          properties:
            title:
              description: A display friendly title for this catalog.
              type: string
            description:
              description: A description of the catalog.
              type: string
            logoURL:
              description: A URL to a logo representing this catalog.
              type: string
            storage:
              description: Contains information on where to find the full catalog, and what type of catalog it is.
              type: object
              properties:
                URL:
                  description: A URL where clients can download the full catalog.
                  type: string
                type:
                  description: The format of this catalog. (Currently only helm is supported.)
                  type: string

  # Info response
  V4InfoResponse:
    type: object
    required:
      - general
    properties:
      general:
        description: General information
        type: object
        required:
          - availability_zones
        properties:
          installation_name:
            description: Unique name of the installation
            type: string
          provider:
            description: The technical provider used in this installation. Either "kvm", "aws", or "azure".
            type: string
          datacenter:
            description: Identifier of the datacenter or cloud provider region, e. g. "eu-west-1"
            type: string
          availability_zones:
            type: object
            description: Number of availability zones which a cluster can be spread across.
            required:
              - max
              - default
            properties:
              max:
                description: Number of availability zones in the region of this installation.
                type: integer
              default:
                description: Default number of availability zones for a cluster.
                type: integer
              zones:
                type: array
                description: The availability zones available in the installation's region for use with tenant clusters.
                items:
                  type: string
      features:
        type: object
        description: Information on particular capabilities of the installation.
        properties:
          nodepools:
            type: object
            description: Support for grouping of worker nodes into node pools.
            properties:
              release_version_minimum:
                type: string
                description: The minimum release version number required to have support for node pools.
      stats:
        type: object
        description: Statistics about the installation
        properties:
          cluster_creation_duration:
            type: object
            description: Duration of cluster creation, summarized.
            properties:
              median:
                type: integer
                description: Median of the value distribution
              p25:
                type: integer
                description: 25th percentile of the value distribution
              p75:
                type: integer
                description: 75th percentile of the value distribution
      workers:
        description: Information related to worker nodes
        type: object
        properties:
          count_per_cluster:
            description: Number of workers per cluster
            type: object
            properties:
              max:
                description: Maximum number of worker a cluster can have. Might be null when unknown.
                type: number
              default:
                description: Default number of workers in a new cluster will have, if not specifiec otherwise
                type: number
          instance_type:
            description: Instance types to be used for worker nodes. Only available for AWS clusters.
            type: object
            properties:
              options:
                description: List of available instance types
                type: array
                items:
                  type: string
              default:
                description: The instance type used in new cluster, if not specified
                type: string
          vm_size:
            description: Azure Virtual Machine size to be used for worker nodes. Only available for Azure clusters.
            type: object
            properties:
              options:
                description: List of available instance types
                type: array
                items:
                  type: string
              default:
                description: The instance type used in new cluster, if not specified
                type: string

  # Request to create a new cluster in V4
  V4AddClusterRequest:
    type: object
    required:
      - owner
    description: Request model for creating a new cluster
    properties:
      owner:
        type: string
        description: Name of the organization owning the cluster
      name:
        type: string
        description: Cluster name
      release_version:
        type: string
        description: |
          The [release](https://docs.giantswarm.io/api/#tag/releases) version
          to use in the new cluster
      availability_zones:
        description: |
          Number of availability zones a cluster should be spread across. The
          default is provided via the [info](#operation/getInfo) endpoint.
        type: integer
      scaling:
        type: object
        description: |
          Attributes specific to cluster node scaling on KVM and Azure. To have
          full control of the cluster size, min and max can be set to the same
          value. If only `min` or only `max` is specified, `min` and `max` will
          be set equally. Not available on AWS.
        properties:
          min:
            type: integer
            description: |
              Minimum number of cluster nodes
          max:
            type: integer
            description: |
              Maximum number of cluster nodes
      workers:
        type: array
        description: |
          Worker node definition on KVM and Azure. If present, the first item
          of the array is expected to contain the specification for all worker
          nodes. Not available on AWS.
        items:
          $ref: '#/definitions/V4NodeDefinition'

  V4ModifyClusterRequest:
    type: object
    description: Request body for cluster modification
    properties:
      name:
        type: string
        description: Name for the cluster
      owner:
        type: string
        description: Name of the organization owning the cluster
      release_version:
        type: string
        description: Release version to use after an upgrade
      scaling:
        type: object
        description: |
          Attributes specific to cluster node scaling. To have full control of
          the cluster size, min and max can be set to the same value.
        properties:
          min:
            type: integer
            description: |
              Minimum number of cluster nodes
          max:
            type: integer
            description: |
              Maximum number of cluster nodes
      workers:
        type: array
        description: Worker node array (deprecated)
        items:
          $ref: '#/definitions/V4NodeDefinition'

  # Details on existing cluster
  V4ClusterDetailsResponse:
    type: object
    description: Response model showing details of a cluster
    properties:
      id:
        type: string
        description: Unique cluster identifier
      api_endpoint:
        type: string
        description: URI of the Kubernetes API endpoint
      create_date:
        type: string
        description: Date/time of cluster creation
      delete_date:
        type: string
        format: date-time
        description: Date/time when cluster has been deleted
        x-nullable: true
      owner:
        type: string
        description: Name of the organization owning the cluster
      name:
        type: string
        description: Cluster name
      credential_id:
        type: string
        description: |
          ID of the credentials used to operate the cluster (only on AWS and
          Azure). See [Set credentials](#operation/addCredentials) for details.
      release_version:
        type: string
        description: |
          The [release](https://docs.giantswarm.io/api/#tag/releases) version
          currently running this cluster.
      scaling:
        type: object
        description: |
          Attributes specific to cluster node scaling as set during cluster
          creation or cluster scaling.
        properties:
          min:
            type: integer
            description: |
              Minimum number of cluster nodes as configured
          max:
            type: integer
            description: |
              Maximum number of cluster nodes as configured
      availability_zones:
        description: List of availability zones a cluster is spread across.
        type: array
        items:
          description: Name of the availability zone
          type: string
      workers:
        description: Information about worker nodes in the cluster (deprecated)
        type: array
        items:
          $ref: '#/definitions/V4NodeDefinition'
      kvm:
        type: object
        description: Attributes specific to clusters running on KVM (on-prem) installations.
        properties:
          port_mappings:
            type: array
            description: |
              Reveals the ports on the control plane that are mapped to this tenant cluster's ingress
              and which protocol that port supports. Only shown and relevant on our on-prem KVM clusters.
            items:
              type: object
              properties:
                port:
                  description: |
                    The port on the control plane that will forward traffic to the tenant cluster
                  type: integer
                protocol:
                  description: |
                    The protocol this port mapping is made for.
                  type: string

  # Definition of a v4 cluster node
  V4NodeDefinition:
    type: object
    properties:
      aws:
        type: object
        description: |
          Attributes specific to nodes running on Amazon Web Services (AWS)
        properties:
          instance_type:
            type: string
            description: |
              EC2 instance type name. Must be the same for all worker nodes
              of a cluster.
      azure:
        type: object
        description: |
          Attributes specific to nodes running on Microsoft Azure
        properties:
          vm_size:
            type: string
            description: |
              Azure Virtual Machine size. Must be the same for all worker nodes
              of a cluster.
      memory:
        type: object
        properties:
          size_gb:
            type: number
            description: RAM size in GB. Can be an integer or float.
      storage:
        type: object
        properties:
          size_gb:
            type: number
            description: Node storage size in GB. Can be an integer or float.
      cpu:
        type: object
        properties:
          cores:
            type: integer
            description: Number of CPU cores
      labels:
        type: object
        additionalProperties: true

  V4CreateAppRequest:
    type: object
    description: A part of the App CR that we create behind the scenes
    properties:
      spec:
        type: object
        required:
          - name
          - namespace
          - version
          - catalog
        properties:
          name:
            type: string
            description: Name of the chart that should be used to install this app
          namespace:
            type: string
            description: Namespace that this app will be installed to
          version:
            type: string
            description: Version of the chart that should be used to install this app
          catalog:
            type: string
            description: The catalog where the chart for this app can be found

  V4ModifyAppRequest:
    type: object
    description: The fields that are editable when trying to modify an app
    properties:
      spec:
        type: object
        properties:
          version:
            type: string
            description: Version of the chart that should be used to install this app

  V4App:
    type: object
    properties:
      metadata:
        type: object
        properties:
          name:
            type: string
            description: The identifier you set when creating this app
          labels:
            type: object
            description: The labels that are set on this App
            additionalProperties: true
      spec:
        type: object
        properties:
          name:
            type: string
            description: Name of the chart that was used to install this app
          namespace:
            type: string
            description: Namespace that this app is installed to
          version:
            type: string
            description: Version of the chart that was used to install this app
          catalog:
            type: string
            description: The catalog that this app came from
          user_config:
            $ref: './definitions.yaml#/definitions/V4AppSpecUserConfig'
      status:
        type: object
        properties:
          app_version:
            type: string
            description: Version of the installed app
          version:
            type: string
            description: Version of the chart that was used to install this app
          release:
            type: object
            properties:
              last_deployed:
                type: string
                description: Date and time that the app was last last deployed
              status:
                type: string
                description: "A string representing the status of the app. (Can be: empty, DEPLOYED or FAILED)"

  V4AppSpecUserConfig:
    type: object
    description: User definable configuration to be applied when the app is deployed
    properties:
      configmap:
        type: object
        properties:
          name:
            type: string
            description: Name of the config map containing values to apply, e.g. prometheus-user-values
          namespace:
            type: string
            description: Namespace of the values config map on the control plane, e.g. 123ab
      secret:
        type: object
        properties:
          name:
            type: string
            description: Name of the Secret on the control plane, which will become available wherever the app is installed
          namespace:
            type: string
            description: Namespace of the Secret on the control plane, e.g. 123ab

  V4GetClusterAppsResponse:
    type: array
    description: Array of apps
    items:
      $ref: '#/definitions/V4App'

  V4GetClusterAppConfigResponse:
    type: object
    description: The values configmap for a given app returned as a yaml file
    additionalProperties: true

  V4CreateAppConfigRequest:
    type: object
    description: A part of the App CR that we create behind the scenes
    additionalProperties: true

  V4GetClusterAppSecretResponse:
    type: object
    description: The response for showing a Secret for a given app
    additionalProperties: true

  V4CreateClusterAppSecretRequest:
    type: object
    description: The values to be used when creating a Secret for a given app
    additionalProperties: true

  V4GetClusterStatusResponse:
    type: object
    description: Object about a cluster's current state
    additionalProperties: true

  # List of key pairs
  V4GetKeyPairsResponse:
    type: array
    description: Array of sparse key pair objects
    items:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the key pair
        description:
          type: string
          description: Free text information about the key pair
        ttl_hours:
          type: integer
          description: Expiration time (from creation) in hours
        create_date:
          type: string
          description: Date/time of creation
        common_name:
          type: string
          description: The common name of the certificate subject.
        certificate_organizations:
          type: string
          description: The certificate subject's `organization` fields.

  # Add key pair request
  V4AddKeyPairRequest:
    type: object
    required:
      - description
    properties:
      description:
        type: string
        description: Free text information about the key pair
      ttl_hours:
        type: integer
        format: int32
        description: Expiration time (from creation) in hours
      cn_prefix:
        type: string
        description: The common name prefix of the certificate subject. This only allows characters that are usable in domain names (`a-z`, `0-9`, and `.-`, where `.-` must not occur at either the start or the end).
      certificate_organizations:
        type: string
        description: |
          This will set the certificate subject's `organization` fields.
          Use a comma seperated list of values.

  V4AddKeyPairResponse:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier of the key pair
      description:
        type: string
        description: Free text information about the key pair
      ttl_hours:
        type: integer
        description: Expiration time (from creation) in hours
      create_date:
        type: string
        description: Date/time of creation
      certificate_authority_data:
        type: string
        description: PEM-encoded CA certificate of the cluster
      client_key_data:
        type: string
        description: PEM-encoded RSA private key
      client_certificate_data:
        type: string
        description: PEM-encoded certificate

  # a complete organization object
  V4Organization:
    type: object
    properties:
      id:
        type: string
        description: Unique name/identifier of the organization
      members:
        type: array
        description: List of members that belong to this organization
        items:
          $ref: '#/definitions/V4OrganizationMember'

  # An organization as returned by getOrganizations as an array item
  V4OrganizationListItem:
    type: object
    properties:
      id:
        type: string
        description: Unique name/identifier of the organization

  # A user that belongs to an organization
  V4OrganizationMember:
    type: object
    properties:
      email:
        type: string
        description: Email address of the user

  # One of the users in the array as returned by getUsers
  V4UserListItem:
    type: object
    properties:
      email:
        type: string
        description: Email address of the user
      created:
        type: string
        description: The date and time that this account was created
      expiry:
        type: string
        description: The date and time when this account will expire

  # A cluster array item, as return by getClusters
  V4ClusterListItem:
    type: object
    properties:
      id:
        type: string
        description: Unique cluster identifier
      create_date:
        type: string
        description: Date/time of cluster creation
      delete_date:
        type: string
        format: date-time
        description: Date/time when cluster has been deleted
        x-nullable: true
      name:
        type: string
        description: Cluster name
      owner:
        type: string
        description: Name of the organization owning the cluster
      release_version:
        type: string
        description: The semantic version number of this cluster
      path:
        type: string
        description: API path of the cluster resource

  # A cluster array item, as return by getClusters
  V4ReleaseListItem:
    type: object
    required: ["version", "timestamp", "changelog", "components"]
    properties:
      version:
        type: string
        description: The semantic version number
      timestamp:
        type: string
        description: Date and time of the release creation
      active:
        type: boolean
        description: |
          If true, the version is available for new clusters and cluster
          upgrades. Older versions become unavailable and thus have the
          value `false` here.
      changelog:
        description: |
          Structured list of changes in this release, in comparison to the
          previous version, with respect to the contained components.
        type: array
        items:
          type: object
          properties:
            component:
              type: string
              description: |
                If the changed item was a component, this attribute is the
                name of the component.
            description:
              type: string
              description: Human-friendly description of the change
      components:
        description: |
          List of components and their version contained in the release
        type: array
        items:
          type: object
          required: ["name", "version"]
          properties:
            name:
              type: string
              description: Name of the component
            version:
              type: string
              description: Version number of the component

  V4CreateUserRequest:
    type: object
    required:
      - password
    description: Request model for creating a new user
    properties:
      password:
        type: string
        description: A Base64 encoded password
      expiry:
        type: string
        description: The date and time when this account will expire

  V4ModifyUserRequest:
    type: object
    description: Request model for modifying a specific user
    properties:
      email:
        type: string
        description: New email address
      expiry:
        type: string
        description: New expiry date. (Only editable by admins)

  V4ModifyUserPasswordRequest:
    type: object
    required:
      - new_password_base64
    description: Request model for modifying a user's password
    properties:
      current_password_base64:
        type: string
        description: Current password encoded in Base64. Not required for admins
      new_password_base64:
        type: string
        description: New password encoded in Base64

  V4AddCredentialsRequest:
    type: object
    required:
      - provider
    description: Request model for adding a set of credentials
    properties:
      provider:
        type: string
      aws:
        type: object
        description: Credentials specific to an AWS account
        required:
          - roles
        properties:
          roles:
            type: object
            description: IAM roles to assume by certain entities
            required:
              - awsoperator
              - admin
            properties:
              admin:
                type: string
                description: ARN of the IAM role to assume by Giant Swarm support staff
              awsoperator:
                type: string
                description: ARN of the IAM role to assume by the software operating clusters
      azure:
        type: object
        description: Credentials specific to an Azure service principal
        required:
          - credential
        properties:
          credential:
            type: object
            description: Service principal credential
            required:
              - client_id
              - secret_key
              - subscription_id
              - tenant_id
            properties:
              client_id:
                type: string
                description: Client ID of the service principal
              secret_key:
                type: string
                description: Secret key of the service principal
              subscription_id:
                type: string
                description: Azure subscription ID
              tenant_id:
                type: string
                description: Tenant ID of the Azure subscription

  V4GetCredentialResponse:
    type: object
    description: Response model for getting details on a set of credentials
    properties:
      id:
        type: string
        description: Unique ID of the credentials
      provider:
        type: string
        description: Either 'aws' or 'azure'
      aws:
        type: object
        description: Credentials specific to an AWS account
        properties:
          roles:
            type: object
            description: IAM roles to assume by certain entities
            properties:
              admin:
                type: string
                description: ARN of the IAM role Giant Swarm support staff will use
              awsoperator:
                type: string
                description: ARN of the IAM role assumed by the software operating the clusters
      azure:
        type: object
        description: Credentials specific to an Azure service principal
        properties:
          credential:
            type: object
            description: Service principal credential
            properties:
              client_id:
                type: string
                description: Client ID of the service principal
              subscription_id:
                type: string
                description: Azure subscription ID
              tenant_id:
                type: string
                description: Tenant ID of the Azure subscription

  # response model for a list of credentials
  V4GetCredentialsResponse:
    type: array
    description: |
      List of credential sets for an organization. As of now, this can contain
      either zero or one items.
    items:
      $ref: '#/definitions/V4GetCredentialResponse'

  # A request for an auth token
  V4CreateAuthTokenRequest:
    type: object
    properties:
      email:
        type: string
        description: Your email address
      password_base64:
        type: string
        description: Your password as a base64 encoded string

  # A response to a successful auth token request
  V4CreateAuthTokenResponse:
    type: object
    properties:
      auth_token:
        type: string
        description: The newly created API token


  # List of node pools
  V5GetNodePoolsResponse:
    type: array
    items:
      $ref: '#/definitions/V5GetNodePoolResponse'

  # Add node pool
  V5AddNodePoolRequest:
    description: |
      Request body structure for creating a node pool
    type: object
    properties:
      name:
        description: |
          Node pool name. _(Length between 1-100, cannot contain control codes such as newline.)_
        type: string
      availability_zones:
        description: |
          Specifies how the nodes of a pool are spread over availability zones.
          The object must contain either the `number` attribute or the `zones`
          attribute, but not both.
          The maximum `number` of availbility zones is the same as that found
          under `general.availability_zones.max` from the `/v4/info/` endpoint.
          When not given, availability zones assignment is handled automatically.
        type: object
        properties:
          number:
            type: integer
            description: |
              Number of zones to use. If given, the zones are picked
              automatically. _(Maximum limit of 4 supported.)_
          zones:
            type: array
            description: |
              Names of the availability zones to use. _(Must be same region as the cluster.)_
            items:
              type: string
      scaling:
        description: |
          Attributes specific to cluster node scaling. To have full control of
          the cluster size, min and max can be set to the same value, however `max`
          must be greater or equal to `min`. If only `min` or only `max` is specified,
          `min` and `max` will be set equally.
        type: object
        properties:
          min:
            description: Minimum number of nodes in the pool.
            type: integer
          max:
            description: Maximum number of nodes in the pool.
            type: integer
      node_spec:
        description: Worker node specification
        type: object
        $ref: '#/definitions/V5AddNodePoolRequestNodeSpec'

  # Specification of a node in a node pool to be created
  V5AddNodePoolRequestNodeSpec:
    type: object
    properties:
      aws:
        type: object
        description: |
          Attributes specific to the AWS provider
        properties:
          instance_type:
            type: string
            description: |
              EC2 instance type to use for all nodes in the node pool. _(Validated against available instance types.)_

  # Specification of a node in a node pool after creation
  V5GetNodePoolResponseNodeSpec:
    type: object
    properties:
      aws:
        type: object
        description: |
          Attributes specific to the AWS provider
        properties:
          instance_type:
            type: string
            description: |
              EC2 instance type used by all nodes in this pool
      volume_sizes_gb:
        type: object
        properties:
          docker:
            description: |
              Size of the Docker volume, used to store docker images and
              overlay file system data, in GB.
            type: integer
          kubelet:
            description: |
              Size of the kubelet volume of the worker, used e. g. for
              volumes of type EmptyDir, in GB.
            type: integer

  V5GetNodePoolResponse:
    type: object
    properties:
      id:
        description: Node pool identifier. Unique within a tenant cluster.
        type: string
      name:
        description: Node pool name
        type: string
      availability_zones:
        description: |
          Names of the availability zones used by the nodes of this pool.
        type: array
        items:
          description: Name of the availability zone
          type: string
      scaling:
        description: |
          Scaling range of the node pool.
          If `min` and `max` differ, the node pool is scaled automatically.
          If both have the same value, the cluster size is pinned.
        type: object
        properties:
          min:
            description: Minimum number of nodes in the pool
            type: integer
          max:
            description: Maximum number of nodes in the pool
            type: integer
      subnet:
        description: IP address block used by the node pool
        type: string
      node_spec:
        description: Worker node specification
        type: object
        $ref: '#/definitions/V5GetNodePoolResponseNodeSpec'
      status:
        description: Information on the current size and status of the node pool
        type: object
        properties:
          nodes:
            description: Desired number of nodes in the pool
            type: integer
          nodes_ready:
            description: Number of nodes in state NodeReady
            type: integer


  # Request to create a new cluster in V5
  V5AddClusterRequest:
    type: object
    required:
      - owner
    properties:
      owner:
        type: string
        description: |
          Name of the organization owning the cluster
      name:
        type: string
        description: Cluster name
      release_version:
        type: string
        description: |
          The [release](https://docs.giantswarm.io/api/#tag/releases) version
          to use in the new cluster. If not given, the latest release will be
          used.
      master:
        type: object
        description: |
          Configuration regarding the master node. If not given, the master node
          will be placed automatically.
        properties:
          availability_zone:
            type: string
            description: |
              Name of the availability zone to use for the master node. If not
              given, the master node will be placed automatically.

  V5ClusterDetailsResponse:
    type: object
    properties:
      id:
        type: string
        description: Unique cluster identifier
      api_endpoint:
        type: string
        description: URI of the Kubernetes API endpoint
      create_date:
        type: string
        description: Date/time of cluster creation
      delete_date:
        type: string
        format: date-time
        description: Date/time when cluster has been deleted
        x-nullable: true
      owner:
        type: string
        description: |
          Name of the organization owning the cluster
      name:
        type: string
        description: Cluster name
      credential_id:
        type: string
        description: |
          ID of the credentials used to operate the cluster. See
          [Set credentials](#operation/addCredentials) for details.
      release_version:
        type: string
        description: |
          The [release](https://docs.giantswarm.io/api/#tag/releases) version
          used by the cluster
      master:
        type: object
        description: |
          Information about the master node
        properties:
          availability_zone:
            type: string
            description: |
              Name of the availability zone the master node is placed in
      conditions:
        type: array
        description: List of conditions the cluster has gone through
        items:
          type: object
          properties:
            last_transition_time:
              type: string
              description: Date and time when the cluster transitioned into this condition
            condition:
              type: string
              description: A string describing the condition, e. g. 'Created'
      versions:
        type: array
        items:
          type: object
          properties:
            last_transition_time:
              type: string
              description: Date and time when the cluster got created with or upgraded to this version
            version:
              type: string
              description: Semantic version number

  V5ModifyClusterRequest:
    type: object
    description: Request model for cluster modification
    properties:
      name:
        type: string
        description: New cluster name
      release_version:
        type: string
        description: Release version to upgrade to

  V5ModifyNodePoolRequest:
    type: object
    description: Request body for node pool modification
    properties:
      name:
        type: string
        description: New name of the node pool
      scaling:
        description: |
          Attributes specific to node pool scaling. To have full control of
          the cluster size, min and max can be set to the same value. If only
          `min` or only `max` is specified, `min` and `max` will be set equally.
        type: object
        properties:
          min:
            description: Minimum number of nodes in the pool
            type: integer
          max:
            description: Maximum number of nodes in the pool
            type: integer
